apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'realm-android'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "com.madeng.wifiqr"
        minSdkVersion 16
        targetSdkVersion 23
        versionCode 19
        versionName "4.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            applicationIdSuffix ".debug"
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
    splits {
        abi {
            enable true
            reset()
            include 'x86', 'armeabi', 'armeabi-v7a', 'mips'
            universalApk false
        }
    }
      lintOptions {
          abortOnError false
      }
}

ext.versionCodes = ['x86':4, 'armeabi-v7a':3, 'armeabi':2, 'mips':1]

import com.android.build.OutputFile

android.applicationVariants.all { variant ->
    // assign different version code for each output
    variant.outputs.each { output ->
        output.versionCodeOverride =
            project.ext.versionCodes.get(output.getFilter(OutputFile.ABI)) * 100 + android.defaultConfig.versionCode
    }
}

def appModuleRootFolder = '.'
def srcDir = 'src'
def googleServicesJson = 'google-services.json'

task switchToDebug(type: Copy) {
    def buildType = 'debug'
    description = 'Switches to DEBUG google-services.json'
    from "${srcDir}/${buildType}"
    include "$googleServicesJson"
    into "$appModuleRootFolder"
}

task switchToRelease(type: Copy) {
    def buildType = 'release'
    description = 'Switches to RELEASE google-services.json'
    from "${srcDir}/${buildType}/"
    include "$googleServicesJson"
    into "$appModuleRootFolder"
}

afterEvaluate {
    processDebugGoogleServices.dependsOn switchToDebug
    processReleaseGoogleServices.dependsOn switchToRelease
}

dependencies {
    // support
    compile 'com.android.support:appcompat-v7:23.1.1'

    // code
    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'org.jetbrains:annotations:13.0'
    compile 'eu.chainfire:libsuperuser:1.0.0.201510071325'
    compile 'com.tbruyelle.rxpermissions:rxpermissions:0.5.1@aar'
    compile 'frankiesardo:icepick:3.1.0'
    provided 'frankiesardo:icepick-processor:3.1.0'

    // design
    compile 'com.android.support:cardview-v7:23.1.1'
    compile 'com.melnykov:floatingactionbutton:1.3.0'
    compile 'com.github.clans:fab:1.6.2'
    compile 'com.rengwuxian.materialedittext:library:2.1.4'
    compile 'com.github.rahatarmanahmed:circularprogressview:2.4.0'
    compile 'com.weiwangcn.betterspinner:library-material:1.1.0'
    compile 'net.steamcrafted:materialiconlib:1.0.7'
    compile 'com.facebook.rebound:rebound:0.3.8'
    compile 'com.tumblr:backboard:0.1.0'

    // rxjava
    compile 'io.reactivex:rxjava:1.1.0'
    compile 'io.reactivex:rxandroid:1.1.0'
    compile 'com.jakewharton.rxbinding:rxbinding:0.3.0'

    // debugging
    debugCompile 'com.facebook.stetho:stetho:1.2.0'
    compile 'com.jakewharton.timber:timber:4.1.0'
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3.1'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'
    compile 'com.google.android.gms:play-services-analytics:8.3.0'
    compile('com.crashlytics.sdk.android:crashlytics:2.5.5@aar') {
        transitive = true;
    }

    // testing
    androidTestCompile 'com.android.support.test:runner:0.4.1'
    androidTestCompile 'com.android.support.test:rules:0.4.1'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.1'
    androidTestCompile('com.android.support.test.espresso:espresso-contrib:2.2.1') {
        exclude module: 'support-annotations'
        exclude module: 'recyclerview-v7'
        exclude module: 'support-v4'
    }
    androidTestCompile "com.squareup.spoon:spoon-client:1.3.1"
}

configurations.all {
    resolutionStrategy {
        force('com.android.support:support-annotations:23.0.1')
    }
}

dependencyUpdates.resolutionStrategy = {
  componentSelection { rules ->
    rules.all { ComponentSelection selection ->
      boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
        selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
      }
      if (rejected) {
        selection.reject('Release candidate')
      }
    }
  }
}